name: Release NPM Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish (default: styles-suite)'
        required: false
        default: 'styles-suite'

jobs:
  publish-styles-suite:
    name: Publish styles-suite to GitHub Packages
    if: ${{ github.event_name == 'release' || github.event.inputs.package == 'styles-suite' || github.event.inputs.package == '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: Npm-Suite/styles-suite
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
          scope: '@theoliverlear'

      - name: Verify package files exist
        run: |
          test -f package.json
          test -f index.scss

      - name: Install (no-op for SCSS-only)
        run: |
          if [ -f package-lock.json ]; then
            npm ci || npm i
          else
            npm i --ignore-scripts --no-audit --no-fund || true
          fi

      - name: Check if version already published
        id: check_version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node -e "const fs=require('fs'); const {execSync}=require('child_process'); const v=require('./package.json').version; let exists=false; try{execSync('npm view @theoliverlear/styles-suite@'+v+' version',{stdio:'ignore'}); exists=true;}catch(e){exists=false;} const out=process.env.GITHUB_OUTPUT; if(out){fs.appendFileSync(out,'exists='+exists+'\n');} if(exists){console.log('Version '+v+' already exists on registry. Skipping publish.');}"

      - name: Publish to GitHub Packages
        if: steps.check_version.outputs.exists == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip publish (already exists)
        if: steps.check_version.outputs.exists == 'true'
        run: |
          node -e "console.log('Skipped publish: @theoliverlear/styles-suite@' + require('./package.json').version + ' already exists')"

      - name: Output published package info
        if: steps.check_version.outputs.exists == 'false'
        run: |
          node -e "console.log('Published @theoliverlear/styles-suite@' + require('./package.json').version)"

  publish-angular-suite:
    name: Build and publish angular-suite to GitHub Packages
    if: ${{ github.event_name == 'release' || github.event.inputs.package == 'angular-suite' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: Npm-Suite/angular-suite
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure npm registries
        run: |
          npm config set registry https://registry.npmjs.org
          npm config set @theoliverlear:registry https://npm.pkg.github.com

      - name: Authenticate to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> ~/.npmrc
          npm config set always-auth true

      - name: Check if version already published (angular-suite)
        id: check_version_angular
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node -e "const fs=require('fs'); const {execSync}=require('child_process'); const v=require('./package.json').version; let exists=false; try{execSync('npm view @theoliverlear/angular-suite@'+v+' version',{stdio:'ignore'}); exists=true;}catch(e){exists=false;} const out=process.env.GITHUB_OUTPUT; if(out){fs.appendFileSync(out,'exists='+exists+'\n');} if(exists){console.log('Version '+v+' already exists on registry. Skipping build/publish.');}"

      - name: Install dependencies
        if: steps.check_version_angular.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm ci || npm i

      - name: Build angular-suite (ng-packagr)
        if: steps.check_version_angular.outputs.exists == 'false'
        run: npm run build

      - name: Verify dist output
        if: steps.check_version_angular.outputs.exists == 'false'
        run: |
          test -f dist/package.json

      - name: Publish from dist to GitHub Packages
        if: steps.check_version_angular.outputs.exists == 'false'
        working-directory: Npm-Suite/angular-suite/dist
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip publish (already exists)
        if: steps.check_version_angular.outputs.exists == 'true'
        run: |
          node -e "console.log('Skipped publish: @theoliverlear/angular-suite@' + require('./package.json').version + ' already exists')"

      - name: Output published package info
        if: steps.check_version_angular.outputs.exists == 'false'
        run: |
          node -e "console.log('Published @theoliverlear/angular-suite@' + require('./dist/package.json').version)"
